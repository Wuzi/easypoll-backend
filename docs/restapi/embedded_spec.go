// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the oficial documentation for the EasyPoll API. If you have any problems or requests, please contact us on GitHub.",
    "title": "EasyPoll",
    "contact": {
      "email": "noreply@easypoll.com.br"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/polls": {
      "get": {
        "description": "Gets a list with all the polls in the database",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "List all polls",
        "operationId": "getPolls",
        "responses": {
          "200": {
            "description": "Poll list fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Poll"
              }
            }
          }
        }
      },
      "post": {
        "description": "Inserts a new poll in the database",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Creates a new poll",
        "operationId": "createPoll",
        "parameters": [
          {
            "description": "Poll that will be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll created",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Missing required fields"
          }
        }
      }
    },
    "/polls/{id}": {
      "get": {
        "description": "Gets a single poll by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Display a single poll by id",
        "operationId": "getPollById",
        "parameters": [
          {
            "type": "number",
            "description": "The id of the poll",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Poll fetched successfully",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "description": "Updates the whole poll object with a new one",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Update a poll by id",
        "operationId": "updatePollById",
        "parameters": [
          {
            "type": "number",
            "description": "The id of the poll",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "New poll data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll updated",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Missing required fields"
          }
        }
      },
      "delete": {
        "description": "Removes a poll from the database by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Delete a poll by id",
        "operationId": "deletePollById",
        "parameters": [
          {
            "type": "number",
            "description": "The id of the poll",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Poll deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Answer": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "votes": {
          "type": "number",
          "x-omitempty": false
        }
      }
    },
    "Poll": {
      "type": "object",
      "required": [
        "question",
        "answers",
        "multipleAnswers"
      ],
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Answer"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "number"
        },
        "multipleAnswers": {
          "type": "boolean"
        },
        "question": {
          "type": "string"
        },
        "votes": {
          "type": "number",
          "x-omitempty": false
        }
      }
    }
  },
  "tags": [
    {
      "description": "Operations to get, create, update and delete polls",
      "name": "poll"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the oficial documentation for the EasyPoll API. If you have any problems or requests, please contact us on GitHub.",
    "title": "EasyPoll",
    "contact": {
      "email": "noreply@easypoll.com.br"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/polls": {
      "get": {
        "description": "Gets a list with all the polls in the database",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "List all polls",
        "operationId": "getPolls",
        "responses": {
          "200": {
            "description": "Poll list fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Poll"
              }
            }
          }
        }
      },
      "post": {
        "description": "Inserts a new poll in the database",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Creates a new poll",
        "operationId": "createPoll",
        "parameters": [
          {
            "description": "Poll that will be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll created",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Missing required fields"
          }
        }
      }
    },
    "/polls/{id}": {
      "get": {
        "description": "Gets a single poll by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Display a single poll by id",
        "operationId": "getPollById",
        "parameters": [
          {
            "type": "number",
            "description": "The id of the poll",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Poll fetched successfully",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "description": "Updates the whole poll object with a new one",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Update a poll by id",
        "operationId": "updatePollById",
        "parameters": [
          {
            "type": "number",
            "description": "The id of the poll",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "New poll data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll updated",
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Missing required fields"
          }
        }
      },
      "delete": {
        "description": "Removes a poll from the database by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "poll"
        ],
        "summary": "Delete a poll by id",
        "operationId": "deletePollById",
        "parameters": [
          {
            "type": "number",
            "description": "The id of the poll",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Poll deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Answer": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "votes": {
          "type": "number",
          "x-omitempty": false
        }
      }
    },
    "Poll": {
      "type": "object",
      "required": [
        "question",
        "answers",
        "multipleAnswers"
      ],
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Answer"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "number"
        },
        "multipleAnswers": {
          "type": "boolean"
        },
        "question": {
          "type": "string"
        },
        "votes": {
          "type": "number",
          "x-omitempty": false
        }
      }
    }
  },
  "tags": [
    {
      "description": "Operations to get, create, update and delete polls",
      "name": "poll"
    }
  ]
}`))
}
