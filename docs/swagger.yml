swagger: "2.0"
info:
  description: "This is the oficial documentation for the EasyPoll API. If you have any problems or requests, please contact us on GitHub."
  version: "1.0.0"
  title: "EasyPoll"
  contact:
    email: "noreply@easypoll.com.br"
basePath: "/v1"
tags:
- name: "poll"
  description: "Operations to get, create, update and delete polls"
- name: "vote"
  description: "Operations to vote"
schemes:
- "https"
- "http"
paths:
  /polls:
    get:
      tags:
      - "poll"
      summary: "List all polls"
      description: "Gets a list with all the polls in the database"
      operationId: "getPolls"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          schema:
            type: array
            items:
              $ref: "#/definitions/Poll"
          description: "Poll list fetched successfully"
    post:
      tags:
      - "poll"
      summary: "Create a new poll"
      description: "Inserts a new poll in the database"
      operationId: "createPoll"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Poll that will be created"
        required: true
        schema:
          allOf:
            - $ref: "#/definitions/PollRequest"
          required:
            - question
            - answers
            - multipleAnswers
      responses:
        200:
          schema:
            $ref: "#/definitions/Poll"
          description: "Poll created"
        400:
          description: "Invalid input"
        422:
          description: "Missing required fields"
  /polls/{id}:
    get:
      tags:
      - "poll"
      summary: "Display a single poll by id"
      description: "Gets a single poll by id"
      operationId: "getPollById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: The id of the poll
      responses:
        200:
          schema:
              $ref: "#/definitions/Poll"
          description: "Poll fetched successfully"
        404:
          description: "Resource not found"
    put:
      tags:
      - "poll"
      summary: "Update a poll by id"
      description: "Updates the whole poll object with a new one"
      operationId: "updatePollById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: The id of the poll
      - in: "body"
        name: "body"
        description: "New poll data"
        required: true
        schema:
          allOf:
            - $ref: "#/definitions/PollRequest"
          required:
            - question
            - answers
            - multipleAnswers
      responses:
        200:
          schema:
            $ref: "#/definitions/Poll"
          description: "Poll updated"
        400:
          description: "Invalid input"
        404:
          description: "Resource not found"
        422:
          description: "Missing required fields"
    patch:
      tags:
      - "poll"
      summary: "Update (part of) a poll by id"
      description: |
        Updates (part of) a poll properties, all fields are optional.

        Unspecified fields will be ignored and won't be updated.
      operationId: "patchPollById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: The id of the poll
      - in: "body"
        name: "body"
        description: "Properties of the poll that will be updated"
        required: true
        schema:
          $ref: "#/definitions/PollRequest"
      responses:
        200:
          schema:
            $ref: "#/definitions/Poll"
          description: "Poll updated"
        400:
          description: "Invalid input"
        404:
          description: "Resource not found"
    delete:
      tags:
      - "poll"
      summary: "Delete a poll by id"
      description: "Removes a poll from the database by id"
      operationId: "deletePollById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: The id of the poll
      responses:
        204:
          description: "Poll deleted"
        404:
          description: "Resource not found"
  /polls/{id}/votes:
    post:
      tags:
      - "vote"
      summary: "Votes in answers of a poll"
      description: |
        Adds one vote to answers of a poll, the request body is an array with integers, each number is the index of the answer.

        Sending [1, 3, 2] will add one vote to the 2nd, 4th and 3rd answers of the poll.

        You can only send more than one value in the array if the poll accepts multiple answers.

        Repeated numbers will be counted as one.
      operationId: "addVotePoll"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: The id of the poll
      - in: "body"
        name: "body"
        description: "Array with answers to be voted"
        required: true
        schema:
          type: array
          items:
            type: integer
      responses:
        204:
          description: "Vote(s) added"
        400:
          description: "Invalid input"
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: "body in body is required"
        404:
          description: "Resource not found"
        422:
          description: "Missing required fields"
definitions:
  Poll:
    type: object
    properties:
      id:
        type: integer
      question:
        type: string
        example: "What's your favorite color?"
      answers:
        type: array
        items:
          $ref: '#/definitions/Answer'
      votes:
        type: integer
        x-omitempty: false
      multipleAnswers:
        type: boolean
      createdAt:
        type: string
        format: date-time
  PollRequest:
    type: object
    properties:
      question:
        type: string
        example: "What's your favorite color?"
      answers:
        type: array
        items:
          $ref: '#/definitions/Answer'
      multipleAnswers:
        type: boolean
  Answer:
    type: object
    properties:
      title:
        type: string
        example: "Blue"
      votes:
        type: integer
        x-omitempty: false
